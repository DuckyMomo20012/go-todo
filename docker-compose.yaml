services:
  gateway-service:
    build:
      context: .
      dockerfile: "./docker/go-todo/Dockerfile"
    expose:
      - "8081"
    environment:
      HOST: "0.0.0.0"
      PORT: "8081"

      TASK_SERVER_ADDRESS: "task-service:9000"
    command: ["gateway", "start"]
    networks:
      - go-todo-net

  task-service:
    build:
      context: .
      dockerfile: "./docker/go-todo/Dockerfile"
    expose:
      - "9000"
    environment:
      PORT: "9000"
      APP_ENV: "development"
      LOG_LEVEL: "0"
      LOG_SAMPLE_RATE: "5"

      DB_URL: "postgresql://postgres:postgres@task-db:5432/task?sslmode=disable"

    command: ["task", "start"]
    networks:
      - go-todo-net
    depends_on:
      task-db:
        condition: service_healthy

  task-db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "task"
    ports:
      - "65433:5432"
    networks:
      - go-todo-net
    healthcheck:
      test: pg_isready -U postgres -d task
      interval: 10s
      timeout: 3s
      retries: 5

  task-migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command:
      [
        "-path=/migrations/task",
        "-database=postgresql://postgres:postgres@task-db:5432/task?sslmode=disable",
        "up",
      ]
    networks:
      - go-todo-net
    depends_on:
      task-db:
        condition: service_healthy

  nginx:
    image: nginx:alpine
    tty: true
    ports:
      - 80:80
      - 443:443
    volumes:
      # nginx config
      - ./docker/nginx:/etc/nginx/conf.d
    restart: always
    networks:
      - go-todo-net

  swagger-service:
    image: swaggerapi/swagger-ui:latest
    expose:
      - "8080"
    environment:
      # Ref: https://github.com/swagger-api/swagger-ui/issues/4915#issuecomment-475755863
      URLS: >
        [
          { url: 'docs/task/v1/task.swagger.json', name: 'Go Todo Task API' }
        ]
    volumes:
      - ./api/openapi:/usr/share/nginx/html/docs/
    networks:
      - go-todo-net

networks:
  go-todo-net:
    driver: bridge
