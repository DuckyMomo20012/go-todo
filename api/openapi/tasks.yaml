openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Task API"
  description: "A simple API to manage tasks"
  contact:
    name: "DuckyMomo20012"
    url: "https://github.com/DuckyMomo20012"
servers:
  - url: "http://{hostname}/api"
    variables:
      hostname:
        default: "localhost"
paths:
  /tasks:
    get:
      summary: "List all tasks"
      operationId: "getAllTasks"
      responses:
        "200":
          description: "A list of tasks"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Task"
    post:
      summary: "Create a task"
      operationId: "createTask"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTask"
      responses:
        "201":
          description: "Task created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
  /tasks/{id}:
    get:
      summary: "Get a task by ID"
      operationId: "getOneTask"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "200":
          description: "A single task"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: "Task not found"
    put:
      summary: "Update a task"
      operationId: "updateTask"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: "uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewTask"
      responses:
        "200":
          description: "Task updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "404":
          description: "Task not found"
    delete:
      summary: "Delete a task"
      operationId: "deleteTask"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "string"
            format: "uuid"
      responses:
        "204":
          description: "Task deleted"
        "404":
          description: "Task not found"

components:
  schemas:
    Task:
      allOf:
        - $ref: "#/components/schemas/NewTask"
        - type: "object"
          required:
            - id
          properties:
            id:
              type: "string"
              format: "uuid"
              x-go-type: "string"

    NewTask:
      type: "object"
      properties:
        title:
          type: "string"
        description:
          type: "string"

    Error:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
